# Generated by Django 2.1.7 on 2019-03-09 23:27

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.IntegerField(default=1)),
                ('balance', models.FloatField(default=0.0)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Cup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('size', models.IntegerField(default=0)),
                ('time1', models.DateTimeField(default=datetime.datetime(2019, 3, 9, 23, 27, 18, 926103), null=True)),
                ('time2', models.DateTimeField(default=None, null=True)),
                ('time3', models.DateTimeField(default=None, null=True)),
                ('time4', models.DateTimeField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DropOff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cups_current', models.IntegerField(default=50)),
            ],
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time1', models.DateTimeField(default=datetime.datetime(2019, 3, 9, 23, 27, 18, 927491), null=True)),
                ('time2', models.DateTimeField(default=None, null=True)),
                ('time3', models.DateTimeField(default=None, null=True)),
                ('time4', models.DateTimeField(default=None, null=True)),
                ('cup', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='website.Cup', verbose_name='cup')),
                ('dropOff', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='website.DropOff', verbose_name='cup dropped off')),
            ],
        ),
        migrations.CreateModel(
            name='Movement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='SellPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('cups_desired', models.IntegerField(default=50)),
                ('cups_current', models.IntegerField(default=50)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Company')),
            ],
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('lat', models.FloatField()),
                ('lon', models.FloatField()),
                ('importance', models.IntegerField(default=0)),
            ],
        ),
        migrations.AddField(
            model_name='sellpoint',
            name='station',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Station'),
        ),
        migrations.AddField(
            model_name='movement',
            name='destination',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destination', to='website.Station'),
        ),
        migrations.AddField(
            model_name='movement',
            name='origin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='origin', to='website.Station'),
        ),
        migrations.AddField(
            model_name='history',
            name='sellPoint',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='website.SellPoint', verbose_name='selling point (shop assistant)'),
        ),
        migrations.AddField(
            model_name='history',
            name='user',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AddField(
            model_name='dropoff',
            name='station',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Station'),
        ),
        migrations.AddField(
            model_name='cup',
            name='dropOff',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='website.DropOff'),
        ),
        migrations.AddField(
            model_name='cup',
            name='sellPoint',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='website.SellPoint'),
        ),
        migrations.AddField(
            model_name='cup',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customuser',
            name='dropOff',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='website.DropOff', verbose_name='dropoff point (return machine)'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='sellPoint',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='website.SellPoint', verbose_name='selling point (shop assistant)'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
